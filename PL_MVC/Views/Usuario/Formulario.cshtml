@model ML.Usuario
@{
    ViewData["Title"] = "Formulario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Formulario</h1>

<div class="container">
   
    @using (@Html.BeginForm("Formulario", "Usuario", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {


        <div class="row">
            <div class="col-4 ">
                @Html.HiddenFor(model => model.IdUsuario)
                @Html.TextBoxFor(model => model.IdUsuario, new { @class = "from-control", @placeholder = "Ingrese Id Usuario", @hidden = "IdUsuario" })

            </div>
            <div class="col-4">
                @Html.LabelFor(model => model.Nombre)
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person" viewBox="0 0 16 16">
                            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
                        </svg>
                    </span>
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @placeholder = "Ingrese Nombre", @onkeypress = "return SoloLetras(event,'lblNombreError')" })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @id = "lblNombreError", @class = "text-danger" })
                </div>


            </div>

            <div class="col-4">
                @Html.LabelFor(model => model.ApellidoPaterno)
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person" viewBox="0 0 16 16">
                            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
                        </svg>
                    </span>
                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @placeholder = "Ingrese Apellido Paterno", @onkeypress = "return SoloLetras(event,'lblApePaternoError')" })
                    @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @id = "lblApePaternoError", @class = "text-danger" })
                </div>
            </div>
        </div>




        <div class="row pt-3">

            <div class="col-4">
                @Html.LabelFor(model => model.ApellidoMaterno)
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person" viewBox="0 0 16 16">
                            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
                        </svg>
                    </span>
                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @placeholder = "Ingrese Apellido Materno", @onkeypress = "return SoloLetras(event,'lblApeMaternoError')" })
                    @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @id = "lblApeMaternoError", @class = "text-danger" })
                </div>

            </div>
            <div class="col-4">
                @Html.LabelFor(model => model.Edad)
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-fill" viewBox="0 0 16 16">
                            <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" />
                        </svg>
                    </span>
                    @Html.TextBoxFor(model => model.Edad, new { @class = "form-control", @id = "txtUserName", @placeholder = "Ingrese usuario", @onkeypress = "return SoloNumerosLetrasMas(event,'lblUserError')" })
                    @Html.ValidationMessageFor(model => model.Edad, "", new { @id = "lblUserError", @class = "text-danger" })
                </div>


            </div>
        

           

        </div>


        <div class="row pt-3">
            <div class="col-4">
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1">@@ </span>
                    <input type="file" onchange="Previsualizar(event)" name="ImgUsuario" />
                    @if (Model.Foto == null)
                    {
                        <img id="ImgUsuarioInput" src="~/Imagenes/th.jpg" style="width:200px; height:200px;" />
                    }
                    else
                    {
                        <img id="ImgUsuarioInput" src="data:image/png;base64,@Convert.ToBase64String(Model.Foto)" style="width:200px; height:200px;" />

                    }
                    @Html.HiddenFor(model => model.Foto)
                </div>
            </div>

        </div>
        <div class="row pt-3">
            <div class="col-1">
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
            <div class="col-1">
                @Html.ActionLink("Cancelar", "GetAll", "Usuario", new { @class = "btn btn-danger" })
            </div>


        </div>


    }


</div>


@section scripts {
<script src="~/Scripts/jquery-3.7.0.js"></script>
<script type="text/javascript">
    function Previsualizar(event) {
        var output = document.getElementById('ImgUsuarioInput');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src)
        }
    }

</script>
}